
<html> 
<head> 
  <title>HBBatchBeast Worker</title>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <HTA:APPLICATION ID="HBBatchBeast Worker" APPLICATIONNAME="HBBatchBeast Worker" BORDER="DIALOG" BORDERSTYLE="normal" CAPTION="yes" ICON="rocket.ico" MAXIMIZEBUTTON="yes" MINIMIZEBUTTON="yes" SCROLL="auto" scrollFlat="yes" SHOWINTASKBAR="no" SINGLEINSTANCE="no" SYSMENU="yes" VERSION="1.0" Navigable="yes" WINDOWSTATE="minimize" />
  
  <script type="text/javascript"> 

    function sleep(milliseconds) {
      var start = new Date().getTime();
      for (var i = 0; i < 1e7; i++) {
        if ((new Date().getTime() - start) > milliseconds){
          break;
        }
      }
    }

    window.onload = function() {

      window.resizeTo(1, 1);

      window.moveTo(-100, -100);


      var fso = new ActiveXObject('Scripting.FileSystemObject');


      var workerNumber ="2";  


      var tempRead = fso.OpenTextFile("./Config/presetString.txt", 1, true);
      var preset = tempRead.ReadLine();
      tempRead.Close();

      var tempRead = fso.OpenTextFile("./Config/customPreset.txt", 1, true);
      var customPresets = tempRead.ReadLine();
      tempRead.Close();


      
      queueNumberPath = "./Config/Processes/queueNumberPath.txt";
      sourcePath = "./Config/Processes/sourceQueue.txt";
      destinationPath = "./Config/Processes/destinationQueue.txt"
      destinationPathFinal = "./Config/Processes/destinationFinalQueue.txt"


      var handBrakeCLIPath = fso.GetAbsolutePathName('./HandBrakeCLI.exe');
      var globalQueueNumber;
      var currentLineNumber=0;


      var tempRead = fso.OpenTextFile("./Config/viewCMDOnOff.txt", 1, true);
      var viewCMDOnOff = tempRead.ReadLine();
      tempRead.Close();


      iStreamSource = fso.OpenTextFile(sourcePath, 1, false);
      iStreamDestination = fso.OpenTextFile(destinationPath, 1, false);

   

    var tempRead = fso.OpenTextFile("./Recent/tempDestinationOnOff.txt", 1, true);
    var tempFolderSected = tempRead.ReadLine();
    tempRead.Close();

    if(tempFolderSected=="1"){

      iStreamDestinationFinal = fso.OpenTextFile(destinationPathFinal, 1, false);
    
    }

      while (!iStreamSource.AtEndOfStream) {

       sleep((2000*Math.random()));

       var currentSourceLine = iStreamSource.ReadLine(); 
       var currentDestinationLine = iStreamDestination.ReadLine(); 

         if(tempFolderSected=="1"){
      var currentDestinationFinalLine =  iStreamDestinationFinal.ReadLine(); 
    
             }





       var tempRead = fso.OpenTextFile(queueNumberPath, 1, true);
       globalQueueNumber = tempRead.ReadLine();
       tempRead.Close();

       

       

       


       if (currentLineNumber == globalQueueNumber) {


        globalQueueNumber++;

        
        var tempWrite = fso.OpenTextFile(queueNumberPath, 2, true);
        tempWrite.WriteLine(globalQueueNumber);
        tempWrite.Close(); 


        

        

        var tempWrite = fso.OpenTextFile("./Config/Processes/WorkerStatus/Worker"+workerNumber+"FileName.txt", 2, true);
        tempWrite.WriteLine(currentDestinationLine);
        tempWrite.Close(); 

        var tempWrite = fso.OpenTextFile("./Config/Processes/WorkerStatus/Worker"+workerNumber+"QueueNumber.txt", 2, true);
        tempWrite.WriteLine(globalQueueNumber-1);
        tempWrite.Close(); 



                                                                // var t = fso.OpenTextFile("./Config/Processes/BatchFiles/HandbrakeCLIBatchTemp1.bat", 2, true);
                                      //  t.Close();

                                      var t = fso.OpenTextFile("./Config/Processes/BatchFiles/HandbrakeCLIBatchTemp"+workerNumber+".bat", 2, true);
                                      t.WriteLine("\"" + handBrakeCLIPath +"\" -i \"" +currentSourceLine+"\" -o \""+currentDestinationLine+"\" "+preset);

                                      t.Close();


                                      var path = "/Config/Processes/BatchFiles/HandbrakeCLIBatchTemp"+workerNumber+".bat"
                                      var shell = new ActiveXObject("WScript.Shell");
                                      var rootdir = shell.currentDirectory;
                                      WshShell = new ActiveXObject("WScript.Shell");
                                      WshShell.Run('"' + rootdir + path + '"', viewCMDOnOff, true);


                  var today = new Date();
                  var dd = today.getDate();
                  var mm = today.getMonth() + 1; 
                  var yyyy = today.getFullYear();
                  if (dd < 10) {
                   dd = '0' + dd
                 }
                 if (mm < 10) {
                   mm = '0' + mm
                 }
                 today = dd + '/' + mm + '/' + yyyy;
                 today2 = dd + '-' + mm + '-' + yyyy;

                 var d = new Date(),
                 h = (d.getHours() < 10 ? '0' : '') + d.getHours(),
                 m = (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();
                 s = (d.getSeconds() < 10 ? '0' : '') + d.getSeconds();
                 timenow = h + '-' + m + '-' + s;



//try to write to log, retry if error
                  try{

                var tempWrite = fso.OpenTextFile("./Logs/fileConversionLog.txt", 8, true);


                    }catch(err){

                      sleep((2000*Math.random()));

                        var tempWrite = fso.OpenTextFile("./Logs/fileConversionLog.txt", 8, true);

                    }
           
                


 if(tempFolderSected=="1"){

try{
                                      fso.MoveFile(currentDestinationLine,currentDestinationFinalLine)
                                     
                              
         }catch(err){
                                    //     fso.DeleteFile(currentDestinationLine)


                                      }


      tempWrite.WriteLine(today2+"-"+timenow+"--------Converted----------"+currentSourceLine+"------------to----------"+currentDestinationFinalLine+"----------using preset----------:"+ preset);
                            }else{


      tempWrite.WriteLine(today2+"-"+timenow+"--------Converted----------"+currentSourceLine+"------------to----------"+currentDestinationLine+"----------using preset----------:"+ preset);
                            }

                             tempWrite.Close();





                                    }else{  }

                                    currentLineNumber++;


                                  }



                                  
                                  


                                  iStreamSource.Close();
                                  iStreamDestination.Close();

                                  var tempWrite = fso.OpenTextFile("./Config/Processes/WorkerStatus/Worker"+workerNumber+"FileName.txt", 2, true);
                                  tempWrite.WriteLine("Complete!");
                                  tempWrite.Close(); 

                                  var tempWrite = fso.OpenTextFile("./Config/Processes/WorkerStatus/Worker"+workerNumber+"QueueNumber.txt", 2, true);
                                  tempWrite.WriteLine("Complete!");
                                  tempWrite.Close(); 
                                  
                                  window.close();




                                }


                                
                              </script>

                              <style>
                              




                            </style>
                          </head>
                          
                          <body> 
                            <center>
                              



                            </center>
                            
                            
                            </html>
